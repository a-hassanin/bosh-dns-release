#!/usr/bin/env bash

set -exu

BOSH_BINARY_PATH="$(command -v bosh)"
export BOSH_BINARY_PATH

export BOSH_DEPLOYMENT="bosh-dns"
export TEST_MANIFEST_NAME="manifest"
export NO_RECURSORS_OPS_FILE="no-recursors-configured"
export LOCAL_RECURSOR_OPS_FILE="add-test-dns-nameservers"
export TEST_TARGET_OS="linux"
export GOPATH=$PWD
BASE_STEMCELL=${BASE_STEMCELL:-ubuntu-bionic}
export BASE_STEMCELL
export PATH="${GOPATH}/bin":$PATH

pushd ./src/bosh-dns/acceptance_tests/dns-acceptance-release
   bosh create-release --force && bosh upload-release --rebase
popd

if [ -z "${TEST_CLOUD_CONFIG_PATH-""}" ]; then
  TEST_CLOUD_CONFIG_PATH="$(mktemp)"
  export TEST_CLOUD_CONFIG_PATH
  bosh cloud-config > "$TEST_CLOUD_CONFIG_PATH"
fi

pushd ./src/bosh-dns
  set +u
  if [[ -n "${1}" ]]; then
    go run github.com/onsi/ginkgo/ginkgo -randomizeAllSpecs -randomizeSuites -race -focus="${1}" acceptance_tests
    exit 0
  else
    go run github.com/onsi/ginkgo/ginkgo -randomizeAllSpecs -randomizeSuites -race acceptance_tests
  fi
  set -u
popd

# Need to delete the bosh-dns runtime config because bbl uses a hard-coded
# bosh-deployment which specifies a bosh-dns version that may conflict with the
# one we are trying to test.
bosh delete-config --type=runtime --name=dns -n

bosh -n deploy ./src/bosh-dns/test_yml_assets/manifests/dns-linux.yml \
   -v health_server_port=2345 \
   -o ./src/bosh-dns/test_yml_assets/ops/manifest/use-dns-release-default-bind-and-alias-addresses.yml \
   -o ./src/bosh-dns/test_yml_assets/ops/manifest/enable-health-manifest-linux.yml \
   -o ./src/bosh-dns/test_yml_assets/ops/manifest/enable-require-dns-in-pre-start-ops.yml \
   -v base_stemcell="${BASE_STEMCELL}" \
   --vars-store dns-creds.yml

pushd ./src/bosh-dns
  go run github.com/onsi/ginkgo/ginkgo -randomizeAllSpecs -randomizeSuites -race -r acceptance_tests/linux
popd
